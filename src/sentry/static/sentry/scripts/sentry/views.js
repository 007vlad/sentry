// Generated by CoffeeScript 1.3.3
(function() {
  var GroupListView, GroupView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  GroupListView = (function(_super) {

    __extends(GroupListView, _super);

    function GroupListView() {
      return GroupListView.__super__.constructor.apply(this, arguments);
    }

    GroupListView.prototype.el = '.group-list';

    GroupListView.prototype.initialize = function() {
      _.bindAll(this);
      this.collection = new GroupList;
      this.collection.on('add', this.appendMember);
      this.collection.on('remove', this.clearMember);
      return this.collection.on('add remove', this.changed);
    };

    GroupListView.prototype.changed = function() {
      return this.trigger("membership");
    };

    GroupListView.prototype.appendMember = function(obj) {
      var out, view;
      view = new GroupView({
        model: obj,
        id: this.id + obj.id
      });
      out = group_view.render();
      return $('#' + this.id).append(out.el);
    };

    GroupListView.prototype.addMember = function(obj) {
      if (!this.hasMember(obj)) {
        return this.collection.add(obj);
      } else {
        obj = this.collection.get(obj.id);
        return obj.set('count', obj.get("count"));
      }
    };

    GroupListView.prototype.hasMember = function(obj) {
      if (this.collection.get(obj.id)) {
        return true;
      } else {
        return false;
      }
    };

    GroupListView.prototype.removeMember = function(obj) {
      return this.collection.remove(obj);
    };

    GroupListView.prototype.clearMember = function(obj) {
      return $('li[data-id="' + this.id + '"]', el).remove();
    };

    return GroupListView;

  })(Backbone.View);

  GroupView = GroupView = (function(_super) {

    __extends(GroupView, _super);

    function GroupView() {
      return GroupView.__super__.constructor.apply(this, arguments);
    }

    GroupView.prototype.tagName = 'li';

    GroupView.prototype.className = 'group';

    GroupView.prototype.template = _.template($('#group-template').html());

    GroupView.prototype.initialize = function() {
      _.bindAll(this);
      return this.model.on("change:count", this.updateCount);
    };

    GroupView.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    GroupView.prototype.updateCount = function(obj) {
      return $('.count span', this.$el).text(this.model.get("count"));
    };

    return GroupView;

  })(Backbone.View);

}).call(this);
